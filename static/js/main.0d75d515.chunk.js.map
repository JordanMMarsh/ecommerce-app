{"version":3,"sources":["FilterItem.js","FilterBar.js","ShopItem.js","CartModule.js","CartItem.js","AddItem.js","StorePage.js","App.js","serviceWorker.js","index.js"],"names":["FilterItem","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","checked","filterItemName","name","react_default","a","createElement","className","onClick","filterChange","type","value","Component","FilterBar","id","filterList","map","item","src_FilterItem","ShopItem","ratingImg","salePrice","pricing","basePrice","altRating","rating","displayBadge","badge","src","alt","addItem","index","CartModule","cartTotal","switchToCart","cartSize","CartItem","itemSalePrice","itemBasePrice","displayQuantity","itemQuantity","removeItem","itemName","AddItem","state","displayExpand","displayOptions","expandText","toggleDisplay","bind","assertThisInitialized","setState","onChangeFunction","handleChange","error","nameValue","onChange","handleNameChange","maxlength","placeholder","itemPrice","handlePriceChange","salePriceChange","badgeValue","badgeChange","itemRating","min","max","step","ratingChange","filters","displayChecked","items","tags","StorePage","addItemFilterList","addItemName","addItemPrice","addItemSalePrice","addItemRating","addItemBadge","addItemError","cart","screen","handleFilterChange","addItemToCart","switchToStore","increaseItemQuantity","removeItemFromCart","updateCartTotal","addItemToStore","handleItemNameChange","handleItemFilterChange","handleItemPriceChange","handleItemSalePriceChange","handleItemRatingChange","handleItemBadgeChange","parseFloat","itemBadge","itemFilterList","addItemFilters","itemError","isNaN","i","length","push","val","e","target","quantity","Math","round","splice","itemIndex","pushToCart","console","log","findIndex","displayItems","filteredList","filter","some","indexOf","itemList","src_CartModule","src_FilterBar","src_AddItem","src_ShopItem","removeItemFunction","increaseItemQuantityFunction","itemAtIndex","src_CartItem","App","src_StorePage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d75d515.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FilterItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let checked = this.props.checked;\r\n    checked ? checked=\"checked\" : checked = \"\";\r\n    let filterItemName = this.props.name;\r\n    return (\r\n      <div className=\"FilterItem\" onClick={() => this.props.filterChange(filterItemName)} >\r\n        <input type=\"checkbox\" name={filterItemName} value={filterItemName} checked={checked} />{this.props.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItem;\r\n","import React, { Component } from 'react';\r\nimport FilterItem from './FilterItem';\r\n\r\nclass FilterBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    let filterChange = this.props.filterChange;\r\n    return (\r\n      <div className=\"FilterBar\">\r\n        <h2 id=\"filterTitle\">Include</h2>\r\n        <form>\r\n        {this.props.filterList.map(function(item) {\r\n          return <FilterItem name={item.name} checked={item.checked} filterChange={filterChange}/>;\r\n        })}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterBar;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass ShopItem extends Component {\r\n  render() {\r\n    //If on sale, assign pricing spans for css\r\n    let salePrice = this.props.salePrice;\r\n    let pricing = <span className=\"basePrice\">${this.props.basePrice}</span>;\r\n    if (salePrice != \"\") {\r\n      pricing = <div><span className=\"baseSale\">${this.props.basePrice}</span>\r\n      <span className=\"salePrice\">${this.props.salePrice}</span></div>\r\n    }\r\n\r\n    //Assign rating image based on rating\r\n    let ratingImg;\r\n    let altRating = \"Item rating\";\r\n    let rating = this.props.rating;\r\n    if (rating == 5) {\r\n      ratingImg = \"images/rating5.png\";\r\n      altRating = \"5 star rating\";\r\n    }\r\n    else if (rating >= 4.5) {\r\n      ratingImg = \"images/rating45.png\";\r\n      altRating = \"4.5 star rating\";\r\n    }\r\n    else if (rating >= 4.0) {\r\n      ratingImg = \"images/rating4.png\";\r\n      altRating = \"4 star rating\";\r\n    }\r\n    else if (rating >= 3.5) {\r\n      ratingImg = \"images/rating35.png\";\r\n      altRating = \"3.5 star rating\";\r\n    }\r\n    else if (rating >= 3.0) {\r\n      ratingImg = \"images/rating3.png\";\r\n      altRating = \"3 star rating\";\r\n    }\r\n    else if (rating >= 2.5) {\r\n      ratingImg = \"images/rating25.png\";\r\n      altRating = \"2.5 star rating\";\r\n    }\r\n    else if (rating >= 2.0) {\r\n      ratingImg = \"images/rating2.png\";\r\n      altRating = \"2 star rating\";\r\n    }\r\n    else if (rating >= 1.5) {\r\n      ratingImg = \"images/rating15.png\";\r\n      altRating = \"1.5 star rating\";\r\n    }\r\n    else if (rating >= 1.0) {\r\n      ratingImg = \"images/rating1.png\";\r\n      altRating = \"1 star rating\";\r\n    }\r\n    else if (rating >= 0.5) {\r\n      ratingImg = \"images/rating05.png\";\r\n      altRating = \"0.5 star rating\";\r\n    }\r\n    else {\r\n      ratingImg = \"images/rating0.png\";\r\n      altRating = \"Less than 0.5 star rating\";\r\n    }\r\n    let displayBadge = \"\";\r\n    if (this.props.badge != \"\") {\r\n      displayBadge = <h3 className=\"badge\">{this.props.badge}</h3>;\r\n    }\r\n    return (\r\n      <div className=\"ShopItem\">\r\n        {displayBadge}\r\n        <h3 className=\"itemName\">{this.props.name}</h3>\r\n        <div className=\"productImgContainer\">\r\n        <img src=\"images/tvimg.png\" alt=\"Television\" />\r\n        </div>\r\n        <div className=\"pricing\">\r\n        {pricing}\r\n        </div>\r\n        <div className=\"ratings\">\r\n        <img src={ratingImg} alt={altRating} /> <span className=\"textRating\">{rating}</span>\r\n        </div>\r\n        <div className=\"buyNow\">\r\n        <h3 className=\"buyButton\" onClick={() => this.props.addItem(this.props.name, this.props.index)}>Add to Cart</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShopItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass CartModule extends Component {\r\n  render() {\r\n    let cartTotal = \"\";\r\n    if (this.props.cartTotal > 0) {\r\n      cartTotal = <span className=\"cartTotal\">${this.props.cartTotal}</span>;\r\n    }\r\n    return (\r\n      <div className=\"CartModule\" onClick={this.props.switchToCart}>\r\n        <span className=\"cartCount\">Cart [{this.props.cartSize}]</span><br />\r\n        {cartTotal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartModule;\r\n","import React, { Component } from 'react';\r\n\r\nclass CartItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let salePrice = this.props.itemSalePrice;\r\n    let pricing = <span className=\"basePrice\">${this.props.itemBasePrice}</span>;\r\n    if (salePrice != \"\") {\r\n      pricing = <div><span className=\"baseSale\">${this.props.itemBasePrice}</span>\r\n      <span className=\"salePrice\">${this.props.itemSalePrice}</span></div>;\r\n    }\r\n\r\n    //Grab quantity of item and display it\r\n    //Also display button to remove based on quantity\r\n    let displayQuantity = \"\";\r\n    let itemQuantity = this.props.itemQuantity;\r\n    let addItem = \"<Add item to cart>\";\r\n    let removeItem = \"<Remove item from cart>\";\r\n    if (itemQuantity > 1)\r\n    {\r\n      displayQuantity = \" x\" + itemQuantity;\r\n      removeItem = \"<Remove one from cart>\"\r\n    }\r\n    return (\r\n      <div className=\"CartItem\">\r\n        <h2>{this.props.itemName}{displayQuantity}</h2>\r\n        <div className=\"pricing\">\r\n        {pricing}\r\n        </div>\r\n        <div className=\"addItem\" onClick={() => this.props.addItem(this.props.itemName)}>\r\n        {addItem}\r\n        </div>\r\n        <div className=\"removeItem\" onClick={() => this.props.removeItem(this.props.itemName)}>\r\n        {removeItem}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayExpand: \"showElement\",\r\n      displayOptions: \"hideElement\",\r\n      expandText: \"Click to expand\"\r\n    };\r\n    this.toggleDisplay = this.toggleDisplay.bind(this);\r\n  }\r\n\r\n  toggleDisplay() {\r\n    let displayExpand = this.state.displayExpand;\r\n    let displayOptions = this.state.displayOptions;\r\n    let expandText = this.state.expandText;\r\n    if (displayExpand == \"showElement\") {\r\n      displayExpand = \"hideElement\";\r\n      displayOptions = \"showElement\";\r\n      expandText = \"Click to collapse\";\r\n    }\r\n    else {\r\n      displayExpand = \"showElement\";\r\n      displayOptions = \"hideElement\";\r\n      expandText = \"Click to expand\";\r\n    }\r\n    this.setState({\r\n      displayExpand: displayExpand,\r\n      displayOptions: displayOptions,\r\n      expandText: expandText\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let onChangeFunction = this.props.handleChange;\r\n    return (\r\n      <div className=\"addItemForm\">\r\n      <h2>Add Item</h2>\r\n      <h3 id=\"clickToExpand\" onClick={this.toggleDisplay}>{this.state.expandText}</h3>\r\n      <div className=\"addItemOptions\" id={this.state.displayOptions}>\r\n      {this.props.error}<br />\r\n      <input id=\"addItemName\" type=\"text\" value={this.props.nameValue} onChange={this.props.handleNameChange} maxlength=\"50\" placeholder=\"Enter item name\"/><br />\r\n      $<input id=\"addItemPrice\" type=\"text\" placeholder=\"Enter item price\" value={this.props.itemPrice} maxlength=\"8\" onChange={this.props.handlePriceChange}/><br />\r\n      $<input id=\"addItemSalePrice\" type=\"text\" placeholder=\"Enter item sale price\" value={this.props.itemSalePrice} maxlength=\"8\" onChange={this.props.salePriceChange}/><br />\r\n      <input id=\"addItemBadge\" type=\"text\" placeholder=\"Item badge(Best Value, New)\" value={this.props.badgeValue} maxlength=\"20\" onChange={this.props.badgeChange}/>\r\n      <div className=\"priceSliderContainer\">\r\n      Rating: {this.props.itemRating}<br />\r\n      <input type=\"range\" min=\"0\" max=\"5\" step=\"0.5\" value={this.props.itemRating} onChange={this.props.ratingChange} className=\"priceSlider\" /><br />\r\n      </div>\r\n      <ul id=\"addItemFilters\">\r\n      {this.props.filters.map(function(item) {\r\n        let checked = item.checked;\r\n        let displayChecked = \"\";\r\n        if (checked) displayChecked = \"checked\";\r\n        return <li className=\"addItemFilterListItem\"><input type=\"checkbox\" onChange={() => onChangeFunction(item.name)} checked={displayChecked}/>{item.name}</li>;\r\n      })}\r\n      </ul>\r\n      <input id=\"addItemSubmit\" type=\"button\" value=\"Add Item\" onClick={this.props.addItem}/>\r\n      </div></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport ShopItem from './ShopItem';\r\nimport CartModule from './CartModule';\r\nimport CartItem from './CartItem';\r\nimport AddItem from './AddItem';\r\n\r\n//Item list\r\nlet items = [\r\n  {\r\n    name: 'LG 50\" Widescreen LCD TV',\r\n    basePrice: 1999.99,\r\n    salePrice: 1499.99,\r\n    tags: [\"LG\", \"Widescreen\", \"LCD\"],\r\n    badge: \"New\",\r\n    rating: 4.5\r\n  },\r\n  {\r\n    name: 'Lenovo 48\" Widescreen LED TV',\r\n    basePrice: 1299.99,\r\n    salePrice: 1199.99,\r\n    tags: [\"Lenovo\", \"Widescreen\", \"LED\"],\r\n    badge: \"Best Value\",\r\n    rating: 3.9\r\n  },\r\n  {\r\n    name: 'Samsung 55\" Curved LED TV',\r\n    basePrice: 2999.99,\r\n    salePrice: \"\",\r\n    tags: [\"Samsung\", \"Curved\", \"LED\"],\r\n    badge: \"Most Popular\",\r\n    rating: 3.0\r\n  },\r\n  {\r\n    name: 'LG 42\" Widescreen LCD TV',\r\n    basePrice: 1499.99,\r\n    salePrice: 1299.99,\r\n    tags: [\"LG\", \"Widescreen\", \"LCD\"],\r\n    badge: \"\",\r\n    rating: 3.2\r\n  },\r\n  {\r\n    name: 'Lenovo 40\" LCD TV',\r\n    basePrice: 1299.99,\r\n    salePrice: 1099.99,\r\n    tags: [\"Lenovo\", \"LCD\"],\r\n    badge: \"Best Price\",\r\n    rating: 2.8\r\n  },\r\n  {\r\n    name: 'Samsung 70\" Widescreen LED TV',\r\n    basePrice: 3999.99,\r\n    salePrice: 3899,\r\n    tags: [\"Samsung\", \"Widescreen\", \"LED\"],\r\n    badge: \"New\",\r\n    rating: 5.0\r\n  }\r\n];\r\n\r\nclass StorePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: items,\r\n      filterList: [\r\n        {\r\n        name: \"LG\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Lenovo\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Samsung\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Widescreen\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Curved\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"LCD\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"LED\",\r\n        checked: false\r\n        }\r\n      ],\r\n      addItemFilterList: [\r\n        {\r\n        name: \"LG\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Lenovo\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Samsung\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Widescreen\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"Curved\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"LCD\",\r\n        checked: false\r\n        },\r\n        {\r\n        name: \"LED\",\r\n        checked: false\r\n        }\r\n      ],\r\n      addItemName: \"\",\r\n      addItemPrice: \"\",\r\n      addItemSalePrice: \"\",\r\n      addItemRating: 2.5,\r\n      addItemBadge: \"\",\r\n      addItemError: \"\",\r\n      cart: [],\r\n      cartSize: 0,\r\n      cartTotal: 0,\r\n      screen: \"shop\"\r\n    };\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n    this.addItemToCart = this.addItemToCart.bind(this);\r\n    this.switchToCart = this.switchToCart.bind(this);\r\n    this.switchToStore = this.switchToStore.bind(this);\r\n    this.increaseItemQuantity = this.increaseItemQuantity.bind(this);\r\n    this.removeItemFromCart = this.removeItemFromCart.bind(this);\r\n    this.updateCartTotal = this.updateCartTotal.bind(this);\r\n    this.addItemToStore = this.addItemToStore.bind(this);\r\n    this.handleItemNameChange = this.handleItemNameChange.bind(this);\r\n    this.handleItemFilterChange = this.handleItemFilterChange.bind(this);\r\n    this.handleItemPriceChange = this.handleItemPriceChange.bind(this);\r\n    this.handleItemSalePriceChange = this.handleItemSalePriceChange.bind(this);\r\n    this.handleItemRatingChange = this.handleItemRatingChange.bind(this);\r\n    this.handleItemBadgeChange = this.handleItemBadgeChange.bind(this);\r\n  }\r\n\r\n  //used to test features\r\n  addItemToStore() {\r\n    let items = this.state.items;\r\n    let itemName = this.state.addItemName;\r\n    let itemPrice = parseFloat(this.state.addItemPrice);\r\n    let itemSalePrice = this.state.addItemSalePrice;\r\n    if (itemSalePrice != \"\") itemSalePrice = parseFloat(itemSalePrice);\r\n    let itemRating = this.state.addItemRating;\r\n    let itemBadge = this.state.addItemBadge;\r\n    let itemFilterList = this.state.addItemFilterList;\r\n    let addItemFilters = [];\r\n    let itemError = \"\";\r\n    if (itemName == \"\") {\r\n      itemError = \"Item name cannot be blank\";\r\n    }\r\n    else if (isNaN(itemPrice)) {\r\n      itemError = \"Item price must be a number\";\r\n    }\r\n    else if (itemSalePrice != \"\" && isNaN(itemSalePrice)) {\r\n      itemError = \"Item sale price must be a number\";\r\n    }\r\n    else if (itemSalePrice >= itemPrice) {\r\n      itemError = \"Item sale price must be less than base price\";\r\n    }\r\n    else {\r\n      for (let i = 0; i < itemFilterList.length; i++) {\r\n          if (itemFilterList[i].checked) {\r\n            addItemFilters.push(itemFilterList[i].name); //add filter to item\r\n            itemFilterList[i].checked = false; //reset filter for next item\r\n          }\r\n      }\r\n\r\n      //add item to items list\r\n      items.push({\r\n        name: itemName,\r\n        basePrice: itemPrice,\r\n        salePrice: itemSalePrice,\r\n        tags: addItemFilters,\r\n        badge: itemBadge,\r\n        rating: itemRating\r\n      });\r\n\r\n      //reset add item form\r\n      this.setState({\r\n        items: items,\r\n        addItemName: \"\",\r\n        addItemPrice: \"\",\r\n        addItemSalePrice: \"\",\r\n        addItemRating: \"\",\r\n        addItemBadge: \"\",\r\n        addItemFilterList: itemFilterList\r\n      });\r\n    }\r\n    this.setState({\r\n      addItemError: itemError\r\n    });\r\n  }\r\n\r\n  handleItemFilterChange(val) {\r\n    let addItemFilterList = this.state.addItemFilterList;\r\n    for (let i = 0; i < addItemFilterList.length; i++) {\r\n      if (addItemFilterList[i].name == val) {\r\n        addItemFilterList[i].checked = !addItemFilterList[i].checked;\r\n        this.setState({\r\n          addItemFilterList: addItemFilterList\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleItemNameChange(e) {\r\n    this.setState({\r\n      addItemName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleItemPriceChange(e) {\r\n    this.setState({\r\n      addItemPrice: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleItemSalePriceChange(e) {\r\n    this.setState({\r\n      addItemSalePrice: e.target.value\r\n    });\r\n  }\r\n\r\n  handleItemRatingChange(e) {\r\n    this.setState({\r\n      addItemRating: e.target.value\r\n    });\r\n  }\r\n\r\n  handleItemBadgeChange(e) {\r\n    this.setState({\r\n      addItemBadge: e.target.value\r\n    });\r\n  }\r\n  //end test feature functions\r\n\r\n  updateCartTotal() {\r\n    let cart = this.state.cart;\r\n    let cartTotal = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      let itemSalePrice = this.state.items[cart[i].index].salePrice;\r\n      if (itemSalePrice != \"\") {\r\n        cartTotal += itemSalePrice * cart[i].quantity;\r\n      }\r\n      else {\r\n        cartTotal += this.state.items[cart[i].index].basePrice * cart[i].quantity;\r\n      }\r\n    }\r\n    cartTotal = Math.round(cartTotal * 100) / 100\r\n    this.setState({\r\n      cartTotal: cartTotal\r\n    });\r\n  }\r\n\r\n  switchToStore() {\r\n    if (this.state.screen != \"shop\") {\r\n      this.setState({\r\n        screen: \"shop\"\r\n      });\r\n    }\r\n  }\r\n\r\n  switchToCart() {\r\n    if (this.state.screen != \"cart\") {\r\n      this.setState({\r\n        screen: \"cart\"\r\n      });\r\n    }\r\n  }\r\n\r\n  increaseItemQuantity(itemName) {\r\n    //find item and increase quantity by one\r\n    let cart = this.state.cart;\r\n    let cartSize = this.state.cartSize;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      if (cart[i].name == itemName) {\r\n        cart[i].quantity += 1;\r\n        cartSize += 1;\r\n        this.setState({\r\n          cart: cart,\r\n          cartSize: cartSize\r\n        });\r\n        this.updateCartTotal();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeItemFromCart(itemName) {\r\n    //find and remove item from cart\r\n    let cart = this.state.cart;\r\n    let cartSize = this.state.cartSize;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      if (cart[i].name == itemName) {\r\n        if (cart[i].quantity <= 1)\r\n        {\r\n          cart.splice(i, 1);\r\n        }\r\n        else\r\n        {\r\n          cart[i].quantity -= 1;\r\n        }\r\n        cartSize -= 1;\r\n        this.setState({\r\n          cart: cart,\r\n          cartSize: cartSize\r\n        });\r\n        this.updateCartTotal();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  addItemToCart(itemName, itemIndex) {\r\n    if (this.state.items[itemIndex].name == itemName) {\r\n      let pushToCart = this.state.cart;\r\n      let cartSize = this.state.cartSize;\r\n\r\n      //find if object exists in cart to change quantity\r\n      //Not super efficient for large arrays, but cart size should remain fairly small and manageable\r\n      for (let i = 0; i < pushToCart.length; i++) {\r\n        if (pushToCart[i].name == itemName) {\r\n          console.log(\"Item found in cart\");\r\n          pushToCart[i].quantity += 1;\r\n          cartSize += 1;\r\n          this.setState({\r\n            cart: pushToCart,\r\n            cartSize: cartSize\r\n          });\r\n          this.updateCartTotal();\r\n          return;\r\n        }\r\n      }\r\n        console.log(\"Item not in cart\");\r\n        pushToCart.push({name: itemName, index: itemIndex, quantity: 1});\r\n        cartSize += 1;\r\n\r\n      this.setState({\r\n        cart: pushToCart,\r\n        cartSize: cartSize\r\n      });\r\n      this.updateCartTotal();\r\n    }\r\n    else console.log(\"An error has occured, cart index not found.\");\r\n  }\r\n\r\n  //Dealing with checking and unchecking of filters\r\n  handleFilterChange(val) {\r\n    let filterList = this.state.filterList;\r\n    let itemIndex = filterList.findIndex(function(item) {\r\n        return item.name == val;\r\n    });\r\n    let checked = filterList[itemIndex].checked;\r\n    filterList[itemIndex].checked = !checked;\r\n    this.setState({\r\n      filterList: filterList\r\n    });\r\n  }\r\n\r\n  //Filtering items based on the filters checked, putting items into displayItems\r\n  render() {\r\n    let addItem = this.addItemToCart;\r\n    let filteredList = [];\r\n    this.state.filterList.filter(function(item) {\r\n      if (item.checked == true) {\r\n        filteredList.push(item.name);\r\n      }\r\n    });\r\n    let displayItems;\r\n    if (filteredList.length > 0){\r\n        displayItems = this.state.items.filter(function(item) {\r\n        return item.tags.some(function(val) {\r\n          return filteredList.indexOf(val) >= 0;\r\n        });\r\n      });\r\n    }\r\n    else {\r\n      displayItems = this.state.items;\r\n    }\r\n\r\n    let itemList = this.state.items;\r\n    //Render screen based on state of \"screen\" (shop page / cart page)\r\n    if (this.state.screen == \"shop\") {\r\n      return (\r\n        <div className=\"StorePage\">\r\n        <CartModule cartSize={this.state.cartSize} switchToCart={this.switchToCart} cartTotal={this.state.cartTotal}/>\r\n          <FilterBar filterList={this.state.filterList} filterChange={this.handleFilterChange}/>\r\n          <AddItem filters={this.state.addItemFilterList} handleChange={this.handleItemFilterChange} handleNameChange={this.handleItemNameChange} itemPrice={this.state.addItemPrice} handlePriceChange={this.handleItemPriceChange} itemSalePrice={this.state.addItemSalePrice} salePriceChange={this.handleItemSalePriceChange} itemRating={this.state.addItemRating} ratingChange={this.handleItemRatingChange} nameValue={this.state.addItemName} badgeValue={this.state.addItemBadge} badgeChange={this.handleItemBadgeChange} addItem={this.addItemToStore} error={this.state.addItemError}/>\r\n          {displayItems.map(function(item, i) {\r\n            return <ShopItem name={item.name} basePrice={item.basePrice} salePrice={item.salePrice} badge={item.badge} rating={item.rating} addItem={addItem} index={i}/>;\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    else if (this.state.screen == \"cart\") {\r\n      let removeItemFunction = this.removeItemFromCart;\r\n      let increaseItemQuantityFunction = this.increaseItemQuantity;\r\n      return (\r\n        <div className=\"CartPage\">\r\n          <div className=\"backToStore\" onClick={this.switchToStore}>\r\n            <span className=\"backToStoreLink\">Continue Shopping</span>\r\n          </div>\r\n          <div className=\"cartItems\">\r\n            {this.state.cart.map(function(item) {\r\n              let itemAtIndex = itemList[item.index];\r\n              return <CartItem itemName={itemAtIndex.name} itemBasePrice={itemAtIndex.basePrice} itemSalePrice={itemAtIndex.salePrice} itemQuantity={item.quantity} removeItem={removeItemFunction} addItem={increaseItemQuantityFunction} itemIndex={item.index} />\r\n            })}\r\n          </div>\r\n          <div className=\"cartTotal\">\r\n          Total: ${this.state.cartTotal}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default StorePage;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport StorePage from './StorePage'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 id=\"storeTitle\">Store App</h1>\r\n        <StorePage />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}